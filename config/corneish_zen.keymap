/*
 * Copyright (c) 2021 Darryl deHaan
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/modifiers.h>

#define __A__ &kp A
#define __B__ &kp B
#define __C__ &kp C
#define __D__ &kp D
#define __E__ &kp E
#define __F__ &kp F
#define __G__ &kp G
#define __H__ &kp H
#define __I__ &kp I
#define __J__ &kp J
#define __K__ &kp K
#define __L__ &kp L
#define __M__ &kp M
#define __N__ &kp N
#define __O__ &kp O
#define __P__ &kp P
#define __Q__ &kp Q
#define __R__ &kp R
#define __S__ &kp S
#define __T__ &kp T
#define __U__ &kp U
#define __V__ &kp V
#define __W__ &kp W
#define __X__ &kp X
#define __Y__ &kp Y
#define __Z__ &kp Z

/ {
  chosen {
    zmk,matrix_transform = &five_column_transform;
  };
};

/ {
    behaviors {
        pht: positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <1>;    // <---[[the W key]]
        };

        hp: behavior_hold_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping_term_ms = <200>;
            bindings = <&kp>, <&kp>;
            retro-tap;
        };

        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp RGUI>, <&kp RALT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // base
        //             ┌─────┐                                      ┌─────┐
        //       ┌─────┤  E  ├─────┐                          ┌─────┤  I  ├─────┐
        // ┌─────┤  W  ├─────┤  R  ├─────┐              ┌─────┤  U  ├─────┤  O  ├─────┐
        // │  Q  ├─────┤  D  ├─────┤  T  │              │  Y  ├─────┤  K  ├─────┤  P  │
        // ├─────┤  S  ├─────┤  F  ├─────┤              ├─────┤  J  ├─────┤  L  ├─────┤
        // │  A  ├─────┤  C  ├─────┤  G  │              │  H  ├─────┤  ,  ├─────┤  ;  │
        // ├─────┤  X  ├─────┤  V  ├─────┤              ├─────┤  M  ├─────┤  .  ├─────┤
        // │  Z  ├─────┘     └─────┤  B  │              │  N  ├─────┘     └─────┤  /  │
        // └─────┘        ┌─────┐  └─────┘              └─────┘  ┌─────┐        └─────┘
        //                │ ly3 │┌─────┐┌─────┐    ┌─────┐┌─────┐│gu/al│
        //                └─────┘│l1/tb││shift│    │sp/ct││ ly2 │└─────┘
        //                       └─────┘└─────┘    └─────┘└─────┘
        default_layer {
            label = "BASE";
            bindings = <
__Q__ __W__ __E__ __R__ __T__           __Y__           __U__ __I__     __O__   __P__
__A__ __S__ __D__ __F__ __G__           __H__           __J__ __K__     __L__   &kp SEMI
__Z__ __X__ __C__ __V__ __B__           __N__           __M__ &kp COMMA &kp DOT &kp FSLH
            &mo 3 &lt 1 TAB &kp LSHFT   &hp LCTRL SPACE &mo 2 &td0
            >;
        };

        // layer 1 - symbols
        //             ┌─────┐                                      ┌─────┐
        //       ┌─────┤  #  ├─────┐                          ┌─────┤  *  ├─────┐
        // ┌─────┤  @  ├─────┤  $  ├─────┐              ┌─────┤  &  ├─────┤  (  ├─────┐
        // │  !  ├─────┤  +  ├─────┤  %  │              │  ^  ├─────┤  -  ├─────┤  )  │
        // ├─────┤  =  ├─────┤  {  ├─────┤              ├─────┤  }  ├─────┤  _  ├─────┤
        // │  '  ├─────┤  ~  ├─────┤  "  │              │  |  ├─────┤     ├─────┤  `  │
        // ├─────┤     ├─────┤  [  ├─────┤              ├─────┤  ]  ├─────┤     ├─────┤
        // │     ├─────┘     └─────┤     │              │     ├─────┘     └─────┤  \  │
        // └─────┘        ┌─────┐  └─────┘              └─────┘  ┌─────┐        └─────┘
        //                │     │┌─────┐┌─────┐    ┌─────┐┌─────┐│     │
        //                └─────┘│     ││     │    │ ENT ││ ESC │└─────┘
        //                       └─────┘└─────┘    └─────┘└─────┘
        symbols_layer {
           label = "SYMBOL";
           bindings = <
&kp EXCL &kp AT    &kp HASH   &kp DLLR &kp PRCNT   &kp CARET &kp AMPS &kp KP_MULTIPLY &kp LPAR  &kp RPAR
&kp APOS &kp EQUAL &kp PLUS   &kp LBRC &kp DQT     &kp PIPE  &kp RBRC &kp MINUS       &kp UNDER &kp GRAVE
&none    &none     &kp TILDE2 &kp LBKT &none       &none     &kp RBKT &none           &none     &kp BSLH
                   &trans     &trans   &trans      &kp ENTER &kp ESC  &trans
           >;
        };

        // layer 2 - navigation
        //             ┌─────┐                                      ┌─────┐
        //       ┌─────┤     ├─────┐                          ┌─────┤     ├─────┐
        // ┌─────┤     ├─────┤     ├─────┐              ┌─────┤ bsp ├─────┤     ├─────┐
        // │     ├─────┤shift├─────┤     │              │     ├─────┤down ├─────┤ del │
        // ├─────┤     ├─────┤ctrl ├─────┤              ├─────┤left ├─────┤ up  ├─────┤
        // │     ├─────┤     ├─────┤     │              │     ├─────┤pgdwn├─────┤right│
        // ├─────┤     ├─────┤     ├─────┤              ├─────┤home ├─────┤pgup ├─────┤
        // │     ├─────┘     └─────┤     │              │     ├─────┘     └─────┤ end │
        // └─────┘        ┌─────┐  └─────┘              └─────┘  ┌─────┐        └─────┘
        //                │     │┌─────┐┌─────┐    ┌─────┐┌─────┐│     │
        //                └─────┘│     ││     │    │     ││     │└─────┘
        //                       └─────┘└─────┘    └─────┘└─────┘
        navigation_layer {
            label = "NAV";
            bindings = <
&none &none &none     &none     &none    &none  &kp BSPC     &none     &none     &kp DEL
&none &none &kp LSHFT &kp LCTRL &none    &none  &kp LEFT     &kp DOWN  &kp UP    &kp RIGHT
&none &none &none     &none     &none    &none  &kp RG(HOME) &kp PG_DN &kp PG_UP &kp RG(END)
            &trans    &trans    &trans   &trans &trans       &trans
            >;
        };

        // layer 3 - numbers and media
        //             ┌─────┐                                      ┌─────┐
        //       ┌─────┤ BT3 ├─────┐                          ┌─────┤  8  ├─────┐
        // ┌─────┤ BT2 ├─────┤ BT4 ├─────┐              ┌─────┤  7  ├─────┤  9  ├─────┐
        // │ BT1 ├─────┤prev ├─────┤ BT5 │              │     ├─────┤  5  ├─────┤     │
        // ├─────┤play ├─────┤next ├─────┤              ├─────┤  4  ├─────┤  6  ├─────┤
        // │     ├─────┤     ├─────┤     │              │     ├─────┤  2  ├─────┤  .  │
        // ├─────┤     ├─────┤     ├─────┤              ├─────┤  1  ├─────┤  3  ├─────┤
        // │ CLR ├─────┘     └─────┤     │              │     ├─────┘     └─────┤     │
        // └─────┘        ┌─────┐  └─────┘              └─────┘  ┌─────┐        └─────┘
        //                │     │┌─────┐┌─────┐    ┌─────┐┌─────┐│     │
        //                └─────┘│     ││     │    │  0  ││     │└─────┘
        //                       └─────┘└─────┘    └─────┘└─────┘
        numbers_layer {
            label = "NUMBER";
            bindings = <
&bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &none    &kp N7 &kp N8 &kp N9 &none
&none        &kp K_PP     &kp K_PREV   &kp K_NEXT   &none          &none    &kp N4 &kp N5 &kp N6 &kp DOT
&bt BT_CLR   &none        &none        &none        &none          &none    &kp N1 &kp N2 &kp N3 &none
                          &trans       &trans       &trans         &kp N0   &trans   &trans
            >;
        };
    };
};
